// Generated by CoffeeScript 1.6.3
" BadassView add 3 basic bits of functionality to a normal Backbone.View\n1) Auto-logging of initialize, render & save\n2) Auto setting constructor args as attributes on view instances\n3) Short elm() to access an html element based on it's name attribute";
var BadassView,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

module.exports = BadassView = (function(_super) {
  __extends(BadassView, _super);

  BadassView.prototype.logging = false;

  BadassView.prototype.autoSetConstructorArgs = true;

  function BadassView(args) {
    var attr, value;
    if ((args != null) && (args.autoSetConstructorArgs != null)) {
      this.autoSetConstructorArgs = args.autoSetConstructorArgs;
    }
    if (this.autoSetConstructorArgs) {
      for (attr in args) {
        if (!__hasProp.call(args, attr)) continue;
        value = args[attr];
        this[attr] = value;
      }
    }
    if (this.logging) {
      this.enableLogging();
    }
    Backbone.View.prototype.constructor.apply(this, arguments);
  }

  BadassView.prototype.enableLogging = function() {
    var _this = this;
    this.viewTypeName = this.constructor.name;
    if (this.initialize != null) {
      this.initialize = _.wrap(this.initialize, function(fn, args) {
        $log("" + _this.viewTypeName + ".init", args);
        return fn.call(_this, args);
      });
    }
    if (this.render != null) {
      this.render = _.wrap(this.render, function(fn, args) {
        $log("" + _this.viewTypeName + ".render", "model", _this.model, "collection", _this.collection);
        return fn.call(_this, args);
      });
    }
    if (this.save != null) {
      return this.save = _.wrap(this.save, function(fn, args) {
        $log("" + _this.viewTypeName + ".save", args);
        return fn.call(_this, args);
      });
    }
  };

  BadassView.prototype.elm = function(attr) {
    return this.$("[name='" + attr + "']");
  };

  return BadassView;

})(Backbone.View);
