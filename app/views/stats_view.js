// Generated by CoffeeScript 1.6.3
var StatsView, View, _ref,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

View = require('./view');

module.exports = StatsView = (function(_super) {
  __extends(StatsView, _super);

  function StatsView() {
    this.render = __bind(this.render, this);
    _ref = StatsView.__super__.constructor.apply(this, arguments);
    return _ref;
  }

  StatsView.prototype.template = require('./templates/stats');

  StatsView.prototype.el = '.stats-view';

  StatsView.prototype.hammerEvents = {
    'tap .todo-clear': 'clearCompleted'
  };

  StatsView.prototype.initialize = function() {
    return this.collection.on('all', this.render, this);
  };

  StatsView.prototype.render = function() {
    var generatedHTML;
    generatedHTML = this.template(this.getRenderData());
    this.$el.html(generatedHTML);
    return this;
  };

  StatsView.prototype.getRenderData = function() {
    return {
      stats: {
        total: this.collection.length,
        done: this.collection.done().length,
        remaining: this.collection.remaining().length
      }
    };
  };

  StatsView.prototype.clearCompleted = function() {
    return this.collection.clearCompleted();
  };

  return StatsView;

})(View);
