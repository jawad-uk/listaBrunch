// Generated by CoffeeScript 1.6.3
var NewTodoView, View, application, template, _ref,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

View = require('./view');

application = require('application');

template = require('./templates/new_todo');

module.exports = NewTodoView = (function(_super) {
  __extends(NewTodoView, _super);

  function NewTodoView() {
    _ref = NewTodoView.__super__.constructor.apply(this, arguments);
    return _ref;
  }

  NewTodoView.prototype.template = template;

  NewTodoView.prototype.id = 'new-todo-view';

  NewTodoView.prototype.events = {
    'keypress #new-todo': 'createOnEnter',
    'click #new-todo-submit': 'createOnClick',
    'focusin #new-todo': 'showButton',
    'focusout #new-todo': 'hideButton'
  };

  NewTodoView.prototype.newAttributes = function() {
    var attributes;
    attributes = {
      order: application.todos.nextOrder()
    };
    if (this.$('#new-todo').val()) {
      attributes.content = this.$('#new-todo').val();
    }
    return attributes;
  };

  NewTodoView.prototype.createOnEnter = function(event) {
    if (event.keyCode !== 13) {
      return;
    }
    application.todos.create(this.newAttributes());
    return this.$('#new-todo').val('');
  };

  NewTodoView.prototype.createOnClick = function(event) {
    console.log('registered click on new todo button');
    application.todos.create(this.newAttributes());
    return $('#new-todo').val('');
  };

  NewTodoView.prototype.showButton = function() {
    var button;
    button = this.$('#new-todo-submit');
    button.addClass('display');
    return $('#new-todo').focus();
  };

  NewTodoView.prototype.hideButton = function() {
    var button;
    button = $('#new-todo-submit');
    return button.removeClass('display');
  };

  return NewTodoView;

})(View);
