// Generated by CoffeeScript 1.6.3
var BaseView, NewTodoView, _ref,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

BaseView = require('./view');

module.exports = NewTodoView = (function(_super) {
  __extends(NewTodoView, _super);

  function NewTodoView() {
    _ref = NewTodoView.__super__.constructor.apply(this, arguments);
    return _ref;
  }

  NewTodoView.prototype.el = '#new-todo-view';

  NewTodoView.prototype.events = {
    'keypress #new-todo': function(e) {
      if (e.keyCode === 13) {
        return this.createTodo();
      }
    },
    'click #new-todo-submit': 'createTodo',
    'tap #new-todo-submit': 'createTodo',
    'focus #new-todo': 'showButton',
    'focusout #new-todo': 'hideButton'
  };

  NewTodoView.prototype.newAttributes = function() {
    var attributes;
    attributes = {
      order: this.collection.nextOrder()
    };
    if (this.$('#new-todo').val()) {
      attributes.content = this.$('#new-todo').val();
    }
    return attributes;
  };

  NewTodoView.prototype.createTodo = function() {
    this.collection.create(this.newAttributes());
    return this.$('#new-todo').val('');
  };

  NewTodoView.prototype.showButton = function() {
    var button;
    button = this.$('#new-todo-submit');
    return button.addClass('display');
  };

  NewTodoView.prototype.hideButton = function() {
    var button;
    button = this.$('#new-todo-submit');
    return button.removeClass('display');
  };

  return NewTodoView;

})(BaseView);
